RDS dizayni:
---------------
create database
engine mysql
version 8.0.27
free tier
a uniqe database name
credential settings:
	database username: admin
	master password: Clarusway_1
Maximum storage threshold :40
public access: yes
additional configuration
initial database name: clarusway
backup:select window/start time: 01 am
maintenance/select window/start time: 02 am
database olustuktan sonra:
--------------------------
database seciliyken
default security group edit inbound rules/add rule / seceneklerden mysql/aurora -tcp -3306
ekliyoruz.
rds sayfasinda database seciliyken connectivity bolumunden endpoint'i kopyaliyoruz
mysql.py calistirip
localhost:5000'den email list show diyerek kontrol ediyoruz
ec2'dan mysql'a baglanmak:
security group'da tcp 80 ve 22 portlari acik olmali.
farkli bir ayarlama yok, normal actigimiz sekilde ec2-instance aciyoruz ve baglaniyoruz.
daha sonra ec2'nun icinde
   sudo yum update -y
   sudo pip3 install flask
   sudo pip3 install flask-mysql
   sudo pip3 install sqlalchemy
   sudo pip3 install flask-SQLAlchemy
   sudo yum install git -y
komutlari ile gereken programlari yukluyoruz
sudo git clone https://github.com/myusername/my-projects.git> komutuyla
github repomu ec2 instance'a clone'ladim.
cd /myprojects/hands-on/flask-05-Handling-SQL-with-Flask-Web-Application
dosyasina girip;
sudo python3 app-with-sqlite.py calistirdik.
ec2'nun public ip'sini herhangi bir browser'da actik.
Ekranda Email Database ve show button'unun altinda kodlarimizdaki email listesini goruyorsak islem basarili.
sudo python3 app-with-mysql.py calistirdiktan sonra, ec2'nun public dns'ini browser'da actigimizda email database
goruyorsak islem basarili.
Not: ec2'dan baglanirken kodun en altindaki app.run(host='0.0.0.0', port=80) satirinin aktif olmasi gerekir.
Localhost'tan baglandigimizda da app.run(debug=True) satirinin aktif edilmesi gerekir.